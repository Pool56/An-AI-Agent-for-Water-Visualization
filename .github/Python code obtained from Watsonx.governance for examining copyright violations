import requests

url = "https://us-south.ml.cloud.ibm.com/ml/v1/text/generation?version=2023-05-29"

body = {
	"input": """Examining possibility of copyright infringement

Input: The objective is to compare the input text with the output text, so as to identify the percentage of similarity of words. The greater the percentage of similarity the more likely  their is a  possibility of copyright infringement.

This is the input  text; Watsonx Assistant provides choice of LLM model, access to tuning, setting safe guardrails, semantic search of your enterprise data both structured and unstructured; completely contained in the environment of your choice under your complete control.

This is the output text; Below is the new text generated which has terms which a mechanical engineer could understand.
Watsonx Assistant offers precise control over LLM selection, tuning, and safe operation by setting guardrails, ensuring \"load balancing\" across enterprise systems. Its ability to perform semantic searches across structured and unstructured enterprise data is similar to optimizing the energy efficiency of a thermodynamic system through constant feedback and adjustment.
Output: The percentage of similarity is 7%
There is minimal copyright infringement

Input: The objective is to compare the input text with the output text, so as to identify the percentage of similarity of words. The greater the percentage of similarity the more likely  their is a  possibility of copyright infringement.

Input text; The watsonx platform comprises three powerful components: 
The watsonx.ai studio for new foundation models, generative AI, and machine learning.
The watsonx.data fit for purpose data store, built on an open lakehouse architecture.

Output text; The watsonx platform comprises three powerful components: 
The watsonx.ai studio for new foundation models, generative AI, and machine learning.
The watsonx.data fit for purpose data store, built on an open lakehouse architecture
Output: The percentage of similarity is 100%
There is high level of copyright infringement, please rewrite it.

Input: Input text; Tips for crafting responses:
Keep answers short and useful.
Reflect the user'\''s intent in the response. Doing so assures users that the virtual assistant is understanding them. Or it gives a user the chance to correct a misunderstanding immediately.

Output text; Tips for Crafting Responses:
Keep answers concise and focused on critical information, such as dosage adjustments for rosuvastatin or potential side effects of acalabrutinib.
Reflect the user'\''s intent to ensure the virtual assistant correctly understands and responds. For example, if a healthcare provider asks, \"What are the contraindications of Calquence?\" the assistant can provide a list of conditions and medications that could interact with it.

Output:""",
	"parameters": {
		"decoding_method": "greedy",
		"max_new_tokens": 200,
		"repetition_penalty": 1
	},
	"model_id": "ibm/granite-13b-chat-v2",
	"project_id": "5c765120-8502-47b0-ba0c-6855b446016f",
	"moderations": {
		"hap": {
			"input": {
				"enabled": True,
				"threshold": 0.5,
				"mask": {
					"remove_entity_value": True
				}
			},
			"output": {
				"enabled": True,
				"threshold": 0.5,
				"mask": {
					"remove_entity_value": True
				}
			}
		}
	}
}

headers = {
	"Accept": "application/json",
	"Content-Type": "application/json",
	"Authorization": "Bearer YOUR_ACCESS_TOKEN"
}

response = requests.post(
	url,
	headers=headers,
	json=body
)

if response.status_code != 200:
	raise Exception("Non-200 response: " + str(response.text))

data = response.json()
